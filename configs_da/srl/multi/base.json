{
    "type": "train_test_log_to_wandb",   
    "dataset_reader":{
        "type": "srl-labeled",
        "bert_model_name": "bert-base-uncased"
    },
    "data_loader": {
        "batch_sampler": {
            "type": "bucket",
            "batch_size": 8,
            "sorting_keys": [
                "tokens"
            ]
        }
    },
     "validation_dataset_reader":{
        "type": "srl-labeled",
        "bert_model_name": "bert-base-uncased"
    },
    "validation_data_loader": {
        "batch_sampler": {
            "type": "bucket",
            "batch_size": 16,
            "sorting_keys": [
                "tokens"
            ]
        }
    },
    "model": {
        "type": "seal-srl",
        "decode_on_wordpieces": true,
        "inference_module": {
            "type": "sequence-tagging-inference-net-normalized-custom",
            "log_key": "inference_module",
            "loss_fn": {
                "type": "combination-loss",
                "constituent_losses": [
                    {
                        "log_key": "neg.nce_score",
                        "normalize_y": true,
                        "reduction": "none",
                        "type": "sequence-tagging-score-loss"
                    },
                    {
                        "log_key": "ce",
                        "normalize_y": false,
                        "reduction": "none",
                        "type": "sequence-tagging-masked-cross-entropy"
                    }
                ],
                "log_key": "loss",
                "loss_weights": [
                    0.5,
                    1
                ],               
                "reduction": "mean"
            }
        },
        "initializer": {
            "regexes": [
                [
                    ".*feedforward._linear_layers.*weight",
                    {
                        "nonlinearity": "relu",
                        "type": "kaiming_uniform"
                    }
                ],
                [
                    ".*linear_layers.*bias",
                    {
                        "type": "zero"
                    }
                ]
            ]
        },
        "label_encoding": "BIO",
        "loss_fn": {
            "type": "seqtag-nce-ranking-with-discrete-sampling",
            "log_key": "seq_nce_loss",
            "num_samples": 400,
            "reduction": "mean"
        },
        "oracle_value_function": {
            "type": "manhattan",
            "differentiable": true
        },
        "sampler": {
            "type": "appending-container",
            "constituent_samplers": [],
            "log_key": "sampler"
        },
        "score_nn": {
            "type": "sequence-tagging",
            "global_score": {
                "type": "self-attention-full-sequence",
                "attention_dim": 256,
                "dropout": 0.5,
                "num_heads": 1,
                "num_tags": 130
            },
            "task_nn": {
                "type": "sequence-tagging",
                "text_field_embedder": {
                    "token_embedders": {
                        "tokens": {
                            "type": "pretrained_transformer",
                            "model_name": "bert-base-uncased"
                        }
                    }
                }
            }
        },
        "task_nn": {
            "type": "sequence-tagging",
            "text_field_embedder": {
                "token_embedders": {
                    "tokens": {
                        "type": "pretrained_transformer",
                        "model_name": "bert-base-uncased"
                    }
                }
            }
        },
        "thresholding": {
            "use_th": false,
            "method": "skip",
            "score_conf": {
                "cut_type": "discrim",
                "quantile": 0.75,
                "score_name": "score",
                "threshold": -100
            }
        },
        "use_pseudo_labeling": false,
        "using_bert_encoder": true
    },
    "train_data_path":"./data/conll-2012/v12/data/train/data/english/annotations/@(bc|bn)",
    "validation_data_path": "./data/conll-2012/v12/data/development/data/english/annotations/@(bc|bn)/",
    "test_data_path": "./data/conll-2012/v12/data/test/data/english/annotations/",
    "trainer": {
        "type": "gradient_descent_minimax",
        "callbacks": [
            "track_epoch_callback",
            "slurm",
            {
                "type": "wandb_allennlp",
                "should_log_parameter_statistics": false,
                "watch_model": false,
                "save_model_archive": false,
                "sub_callbacks": [
                    {
                        "type": "log_best_validation_metric",
                        "priority": 100                        
                    }
                ]
            },
            "thresholding"
        ],
        "checkpointer": {
            "keep_most_recent_by_count": 1,
            "save_every_num_batches": 20000
        },
        "cuda_device": 0,
        "grad_norm": {
            "task_nn": 1
        },
        "inner_mode": "score_nn",
        "learning_rate_schedulers": {
            "task_nn": {
                "type": "reduce_on_plateau",
                "factor": 0.5,
                "mode": "max",
                "patience": 2,
                "verbose": true
            }
        },  
        "num_epochs": 10,
        "num_gradient_accumulation_steps": 2,
        "num_steps": {
            "score_nn": 1,
            "task_nn": 1
        },
        "optimizer": {
            "optimizers": {
                "score_nn": {
                    "type": "adamw",
                    "lr": 1e-05,
                    "weight_decay": 1e-05
                },
                "task_nn": {
                    "type": "huggingface_adamw",
                    "lr": 1e-05,
                    "weight_decay": 1e-05
                }
            }
        },
        "patience": 4,
        "pre_training": 0,
        "validation_metric": "+f1-measure-overall"
    },
    "vocabulary": {
        "type": "from_files",
        "directory": "./data/conll-2012/vocabulary"
    },
    "evaluate_on_test": true,
    "numpy_seed": 2,
    "pytorch_seed": 2,
    "random_seed": 2
}